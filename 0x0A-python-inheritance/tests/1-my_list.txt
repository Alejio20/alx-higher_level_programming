Test for 1-my_list module
=========================

Importing Function from module
>>> MyList = __import__('1-my_list').MyList

For normal case
===============

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

Passing a list
=============

>>> a = [1, 9, 4]
>>> my_list = MyList(a)
>>> my_list.print_sorted()
[1, 4, 9]

For empty list
==============

>>> a = []
>>> my_list = MyList(a)
>>> my_list.print_sorted()
[]

For one number
==============

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.print_sorted()
[1]
>>> print(my_list)
[1]

For same numbers in list
========================

>>> my_list2 = MyList()
>>> my_list2.append(1)
>>> my_list2.append(1)
>>> my_list2.append(1)
>>> my_list2.append(1)
>>> my_list2.print_sorted()
[1, 1, 1, 1]

For parent object
=================

>>> my_list = [1, 2, 3]
>>> my_list.print_sorted()
Traceback (most recent call last):
...
AttributeError: 'list' object has no attribute 'print_sorted'

For negative numbers in list
============================

>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(5)
>>> my_list.append(1)
>>> my_list.append(-1)
>>> my_list.append(51)
>>> my_list.append(-5)
>>> my_list.print_sorted()
[-5, -1, 1, 5, 51]
